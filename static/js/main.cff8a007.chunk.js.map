{"version":3,"sources":["components/shop-header/shop-header.jsx","components/book-list-item/book-list-item.jsx","components/spinner/spinner.jsx","components/error-indicator/error-indicator.jsx","components/bookstore-service-context/bookstoreservicecontext.jsx","components/hoc/with-bookstore-service.jsx","actions/index.jsx","utils/compose.jsx","components/book-list/book-list.jsx","components/shopping-cart-table/shopping-cart-table.jsx","components/pages/home-page.jsx","components/pages/cart-page.jsx","components/app/app.jsx","components/error-boundry/error-boundry.jsx","services/bookstore-service.jsx","reducers/book-list.jsx","reducers/shopping-cart.jsx","reducers/index.jsx","store.js","index.js"],"names":["connect","shoppingCart","cartItems","orderTotal","numItems","length","total","className","to","href","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","Spinner","CircularProgress","color","ErrorIndicator","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","BookList","books","map","id","BookListContainer","this","loading","error","Component","bookList","mapDispatchToProps","onIncrease","onDecrease","onDelete","items","item","idx","count","HomePage","CartPage","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","newTotal","newCount","cartItemList","forEach","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.cff8a007.chunk.js","sourcesContent":["import React from 'react';\r\nimport './shop-header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n    return (\r\n\r\n        <header className=\"shop-header row\">\r\n\r\n            <Link to=\"/reStore\">\r\n                <div className=\"logo text-dark\" href=\"dfasd\">Книжный магазин</div>\r\n            </Link>\r\n\r\n            <Link to=\"/cart\">\r\n                <div className=\"shopping-cart\" href=\"dasdsad\">\r\n                    <i className=\"cart-icon fa fa-shopping-cart\" />\r\n                    {numItems} items (${total})\r\n                </div>\r\n            </Link>\r\n\r\n        </header>\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n    return {\r\n        numItems: cartItems.length,\r\n        total: orderTotal\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopHeader);\r\n","import React from 'react'\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n\r\n    const { title, author, price, coverImage } = book;\r\n    return (\r\n\r\n        <div className=\"book-list-item\">\r\n            <div className=\"book-cover\">\r\n                <img src={coverImage} alt='cover' />\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className='book-author'>{author}</div>\r\n                <div className='book-price'>${price}</div>\r\n                <button\r\n                    onClick={onAddedToCart}\r\n                    className=\"btn btn-info add-to-cart\">Add to cart\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BookListItem;","import React from 'react'\r\nimport './spinner.css'\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst Spinner = () => {\r\n    return <div className='spinner'>\r\n        <CircularProgress color=\"secondary\" />\r\n    </div>\r\n};\r\n\r\nexport default Spinner;","import React from 'react'\r\nimport './error-indicator.css'\r\n\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div className='error-indicator'>\r\n        <h2>Все в порядке!</h2>\r\n        <p>Это запланированная ошибка. Перезагрузите страницу.</p>\r\n    </div>\r\n};\r\n\r\nexport default ErrorIndicator;","import React from 'react'\r\n\r\n\r\nconst {\r\n    Provider: BookstoreServiceProvider,\r\n    Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n};","import React from 'react'\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context/bookstoreservicecontext';\r\n\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return (\r\n                            <Wrapped {...props}\r\n                                bookstoreService={bookstoreService} />\r\n                        )\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withBookstoreService;","\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    };\r\n};\r\n\r\nconst booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    };\r\n};\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    };\r\n};\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    };\r\n};\r\n\r\nexport const bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    };\r\n};\r\n\r\nexport const allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    };\r\n};\r\n\r\nexport const fetchBooks = (bookstoreService, dispatch) => () => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((err) => dispatch(booksError(err)));\r\n}\r\n\r\n","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n}\r\n\r\nexport default compose;","import React, { Component } from 'react'\r\nimport BookListItem from '../book-list-item/book-list-item';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../spinner/spinner'\r\nimport ErrorIndicator from '../error-indicator/error-indicator'\r\nimport { withBookstoreService } from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\nimport './book-list.css';\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n\r\n    return (\r\n        <ul className=\"book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}><BookListItem book={book}\r\n                            onAddedToCart={() => onAddedToCart(book.id)} />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    }\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props;\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n        if (error) {\r\n            return <ErrorIndicator />\r\n        }\r\n        return <BookList books={books} onAddedToCart={onAddedToCart} />\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => {\r\n    return { books, loading, error }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n    return {\r\n        fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n        onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n\r\n    };\r\n};\r\n\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport './shopping-cart-table.css';\r\nimport {\r\n    bookAddedToCart,\r\n    bookRemovedFromCart,\r\n    allBooksRemovedFromCart\r\n} from '../../actions'\r\n\r\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\r\n\r\n\r\n\r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total } = item;\r\n\r\n        return (\r\n            <tr key={id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>{total}</td>\r\n                <td>\r\n                    <button\r\n                        onClick={() => onDelete(id)}\r\n                        className=\"btn btn-outline-danger btn-sm float-right\">\r\n                        <i className=\"fa fa-trash-o\" />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onIncrease(id)}\r\n                        className=\"btn btn-outline-success btn-sm float-right\">\r\n                        <i className=\"fa fa-plus-circle\" />\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onDecrease(id)}\r\n                        className=\"btn btn-outline-warning btn-sm float-right\">\r\n                        <i className=\"fa fa-minus-circle\" />\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Item</th>\r\n                        <th>Count</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {items.map(renderRow)}\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onIncrease: bookAddedToCart,\r\n    onDecrease: bookRemovedFromCart,\r\n    onDelete: allBooksRemovedFromCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\r\n","import React from 'react'\r\nimport BookList from '../book-list/book-list'\r\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table';\r\n\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <BookList />\r\n            <ShoppingCartTable />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HomePage;","import React from 'react'\r\n\r\n\r\nconst CartPage = () => {\r\n    return <div>CartPage</div>\r\n};\r\n\r\nexport default CartPage;","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ShopHeader from '../shop-header/shop-header';\r\nimport HomePage from '../pages/home-page';\r\nimport CartPage from '../pages/cart-page';\r\nimport './app.css'\r\n\r\n\r\nconst App = () => {\r\n\r\n\r\n    return (\r\n        <main role='main' className='container'>\r\n            <ShopHeader />\r\n            <Switch>\r\n                <Route path='/restore' component={HomePage} exact />\r\n                <Route path='/cart' component={CartPage} />\r\n            </Switch>\r\n        </main>\r\n\r\n    )\r\n};\r\n\r\nexport default (App);","import React, { Component } from 'react'\r\nimport ErrorIndicator from '../error-indicator/error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { hasError } = this.state;\r\n\r\n        if (hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n};\r\n","\r\n\r\nexport default class BookstoreService {\r\n\r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Гарри Поттер и узник Азкабана',\r\n            author: 'Кэтлин Джоан Роулинг  ',\r\n            price: 32,\r\n            coverImage: 'https://cdn1.ozone.ru/multimedia/1011027243.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Властелин колец: Хранители кольца',\r\n            author: 'Джон Р.Р. Толкин',\r\n            price: 45,\r\n            coverImage: 'https://s1.livelib.ru/boocover/1000499615/o/328a/Tolkin_Dzh.R.R.__Vlastelin_kolets._Trilogiya._Kn._1._Hraniteli_koltsa.jpeg'\r\n        },\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if (Math.random() > 0.75) {\r\n                    reject(new Error('Smtng bad happened'))\r\n                } else resolve(this.data)\r\n            }, 700);\r\n        })\r\n    }\r\n}","const updateBookList = (state, action) => {\r\n    if (state === undefined) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case 'FETCH_BOOKS_REQUEST':\r\n            return {\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            }\r\n\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state.bookList;\r\n    }\r\n}\r\n\r\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\r\n\r\n    if (item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1),\r\n        ]\r\n    }\r\n\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    }\r\n    return [\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1),\r\n    ]\r\n}\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n    const { id = book.id, count = 0, title = book.title, total = 0 } = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + quantity,\r\n        total: total + quantity * book.price\r\n    }\r\n}\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n    const { bookList: { books }, shoppingCart: { cartItems } } = state;\r\n\r\n    const book = books.find(({ id }) => id === bookId);\r\n    const itemIndex = cartItems.findIndex(({ id }) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const newItem = updateCartItem(book, item, quantity);\r\n    let newTotal = 0;\r\n    let newCount = 0;\r\n\r\n    const cartItemList = updateCartItems(cartItems, newItem, itemIndex)\r\n\r\n    cartItemList.forEach(item => newTotal += item.total);\r\n    cartItemList.forEach(item => newCount += item.count);\r\n\r\n\r\n    return {\r\n        cartItems: updateCartItems(cartItems, newItem, itemIndex),\r\n        orderTotal: newTotal,\r\n        count: newCount\r\n    }\r\n}\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n            count: 0\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n        case 'BOOK_REMOVED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n\r\n        case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n            const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload)\r\n            return updateOrder(state, action.payload, -item.count)\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n\r\n}\r\n\r\nexport default updateShoppingCart;","\r\nimport updateBookList from \"./book-list\";\r\nimport updateShoppingCart from './shopping-cart'\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action),\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nimport App from './components/app/app';\r\nimport ErrorBoundry from './components/error-boundry/error-boundry';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context/bookstoreservicecontext';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundry>\r\n            <BookstoreServiceProvider value={bookstoreService} >\r\n                <Router>\r\n                    <App />\r\n                </Router>\r\n            </BookstoreServiceProvider>\r\n        </ErrorBoundry>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}